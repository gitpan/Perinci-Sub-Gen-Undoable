Revision history for Perinci-Sub-Gen-Undoable

0.21     2012-08-10 (SHARYANTO)

         No functional changes. Use Perinci::Sub::Gen instead of the old
         Perinci::Sub::Gen::common (which caused circular dependency problem
         since it is contained in Perinci-Sub-Gen-AccessTable, which depends on
         Perinci-CmdLine, which depends on Perinci, which depends on us).


0.20     2012-08-10 (SHARYANTO)

         [ENHANCEMENTS]

         - In `steps` argument, instead of a stepspec hash, a string name
           containing name of another step can also be specified, for aliasing.


0.19     2012-08-10 (SHARYANTO)

         No functional changes. Suppress logging fix message when Common::call*
         is just doing check phase, using special argument -log_fix => 0.


0.18     2012-08-10 (SHARYANTO)

         [ENHANCEMENTS]

         - Get step specification from Perinci::Sub::Step::* if not specified in
           `steps` argument.

         - Provide Common::call and Common::call_undo steps.


0.17     2012-08-09 (SHARYANTO)

         Update to Rinci 1.1.22 (and Perinci::Tx::Manager 0.27), where we expect
         undo data to be in -undo_data argument instead of using
         get_undo_steps() and get_redo_steps(). This change is to handle nested
         calls.


0.16     2012-08-08 (SHARYANTO)

         - Use Perinci::Exporter.


0.15     2012-07-27 (SHARYANTO)

         [ENHANCEMENTS]

         - Step's fix_log_message can also be a coderef.


0.14     2012-07-27 (SHARYANTO)

         [ENHANCEMENTS]

         - Add argument: log_level_fix_step, default to 'info'.


0.13     2012-07-04 (SHARYANTO)

         [ENHANCEMENTS]

         - Pass result and result metadata to step's 'fix' routines to allow
           them to be set/changed.

         - Add `install` argument, if set to true then will install the function
           as well as the meta into target package.


0.12     2012-07-04 (SHARYANTO)

         Previous release new feature didn't work. Try again.


0.11     2012-07-04 (SHARYANTO)

         Allow unqualified name, will use caller's package to qualify.


0.10     2012-07-04 (SHARYANTO)

         Interpret 304 status (aside from 200) from step's check as success.


0.09     2012-07-04 (SHARYANTO)

         Sorry, another incompatible change. Hopefully no more in the near
         future.

         [INCOMPATIBLE CHANGES]

         - step's 'check' should return enveloped result, like step's 'fix'.
           This is to simplify code that uses 'check_or_fix'.


0.08     2012-06-26 (SHARYANTO)

         [ENHANCEMENTS]

         - step's 'check' hook can also be an arrayref, for convenience.

         - Add step's 'check_or_fix'.


0.07     2012-06-23 (SHARYANTO)

         There are a couple of incompatible changes. API is still in flux. Sorry
         about this.

         [INCOMPATIBLE CHANGES]

         - 'hook_check_args' renamed to 'check_args' and no longer documented as
           temporary.

         - step's hooks 'gen_undo' and 'run' renamed to 'check' and 'fix',
           respectively.

         [ENHANCEMENTS]

         - 'build_steps' can also be an array instead of code, for convenience.


0.06     2012-06-22 (SHARYANTO)

         [INCOMPATIBLE CHANGES]

         - 'build_steps' is now passed \%args instead of %args, to make it
           consistent with others. Sorry about this.


0.05     2012-06-21 (SHARYANTO)

         [FIXES]

         - Remove old code in 'redo' part.


0.04     2012-06-21 (SHARYANTO)

         [FIXES]

         - Fix setting function result during rollback.


0.03     2012-06-21 (SHARYANTO)

         [FIXES]

         - When calling record_call(), record original function arguments before
           being potentially modified by hook_check_args.

         - Grok if function is being called by txm during rollback (-tx_action
           is set to 'rollback'). Don't do our own rollback again under this
           condition.


0.02     2012-06-07 (SHARYANTO)

         Fix a couple of typos.


0.01     2012-06-06 (SHARYANTO)

         First release. Setup::File::Symlink works using this module. Minimal
         tests. The transactional part has not been tested (waiting for
         Perinci::Tx::Manager).
